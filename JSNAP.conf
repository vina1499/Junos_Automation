do {
    check_show_interfaces_terse;
    check_show_chassis_alarms;
    check_show_system_alarms;
    check_show_chassis_hardware_detail;
    check_show_chassis_version;
    check_show_chassis_routing_engine;
    check_show_chassis_environment;
    check_show_interfaces_descriptions;
    check_show_bgp_summary;
    check_show_ospf_neighbor_detail;
    check_show_mpls_lsp_extensive; 
    check_show_mpls_lsp_ingress_statistics;
    check_show_rsvp_interface;
    check_show_vpls_connections;
    check_show_route_instance_summary;
    check_show_l2circuit_connections_summary;
    check_show_l2circuit_connections;
    check_show_l2vpn_connections;
}

check_show_interfaces_terse {
      command show interfaces terse;
      iterate physical-interface {
		id ./name;
		no-diff oper-status {
			info "Checking PHY operational status of interfaces ...";
			err " ERROR: the operational status for interface %s has changed from %s to %s.", $ID.1, $PRE/oper-status, $POST/oper-status;
 		}
		no-diff admin-status {
			info "Checking PHY admin status of interfaces ...";
			err " ERROR: the admin status for interface %s has changed from %s to %s.", $ID.1, $PRE/admin-status, $POST/admin-status;
		}
		list-not-less name {
			info "Checking for missing interfaces at PHY level ...";
			err " ERROR: the interface %s is missing.", $ID.1;
		}
		list-not-more {
			info "Checking for new interfaces at PHY level ...";
			err " ERROR: the interface %s is new.", $ID.1;
		}
	}
	iterate physical-interface/logical-interface {
		id ./name;
		id ./address-family/address-family-name;
		id ./address-family/interface-address/ifa-local;
		no-diff-in oper-status {
			info "Checking LOGICAL operational status of interfaces ...";
			err " ERROR: the operational status for interface %s has changed from %s to %s.", $ID.1, $PRE/oper-status, $POST/oper-status;
		}
		no-diff-in admin-status {
			info "Checking LOGICAL admin status of interfaces ...";
			err " ERROR: the admin status of interface %s has changed from %s to %s.", $ID.1, $PRE/admin-status, $POST/admin-status;
		}
		list-not-less {
			info "Checking for missing interfaces at LOGICAL level ...";
			err " ERROR: the interface %s is missing.", $ID.1;
		}
		list-not-more {
             		info "Checking for new interfaces at LOGICAL level ...";
			err " ERROR: the interface %s is new.", $ID.1;
		}
		no-diff-in address-family/address-family-name {
			info "Checking the address family configured in the interfaces ...";
			err " ERROR: the address family for interface %s has changed from %s to %s.", $ID.1, $PRE/address-family/address-family-name, $POST/address-family/address-family-name;", $ID.1, $PRE/address-family/address-family-name, $POST/address-family/address-family-name;
		}
		list-not-less address-family/address-family-name {
			info "Checking for missing address family ...";
			err " ERROR: the address family %s is missing on interface %s.", $ID.2, $ID.1;
		}
		list-not-more address-family/address-family-name {
			info "Checking for new family address ...";
			err " ERROR: the address family %s has been added to the interface %s.", $ID.2, $ID.1;
		}
		no-diff-in address-family/interface-address/ifa-local {
			info "Checking the interface address configured under the interface ...";
			err " ERROR: the interface address for interface %s has changed from %s to %s.", $ID.1, $PRE/address-family/interface-address/ifa-local, $POST/address-family/interface-address/ifa-local;
		}
		list-not-less address-family/interface-address/ifa-local {
			info "Checking for missing interface address ...";
			err " ERROR: the interface address %s has gone missing on interface %s.", $ID.3, $ID.1;
		}
		list-not-more address-family/interface-address/ifa-local {
			info "Checking for new interface address ...";
			err " ERROR: the interface address %s has been added to the interface %s.", $ID.3, $ID.1;
		}
	}
}

check_show_interfaces_descriptions {
        command show interfaces descriptions;
        iterate physical-interface {
                id name;
                no-diff admin-status {
                        info Checking if the interfaces admin status have changed [admin-status];
                        err "   ERROR: the admin status of interface %s has changed: PRE: %s / POST: %s", $ID.1, $PRE/admin-status$
                }
                no-diff oper-status {
                        info Checking if the interfaces operational status have changed [oper-status];
                        err "   ERROR: the oper status of interface %s has changed: PRE: %s / POST: %s", $ID.1, $PRE/oper-status, $
                }
                no-diff description {
                        info Checking if the interfaces description have changed [description];
                        err "   ERROR: the description of interface %s has changed: PRE: %s / POST: %s", $ID.1, $PRE/description, $
                }
                list-not-less name {
                        info Checking for missing interfaces [name];
                        err "   ERROR: the interface %s is missing", $ID.1;
                }
                list-not-more name {
                        info Checking for new interfaces [name];
                        err "   ERROR: the interface %s has been added to the router", $ID.1;
                }
        }
}


check_show_chassis_alarms {
	command show chassis alarms
        item alarm-information/alarm-summary {
       		 not-exists active-alarm-count {
              		 info No chassis alarms;
               		 err "    ERROR: There are %s chassis alarms", active-alarm-count;
          	 }
     	}
     	iterate alarm-information/alarm-detail {
          	id alarm-description;
          	list-not-less {
               		info Alarm Gone Missing;
               		err "    -Alarm: %s", alarm-description;
     		}
          	list-not-more {
               		info Alarm Got More;
               		err "    +Alarm: %s", alarm-description;
          	}
     	}
}

check_show_system_alarms {
	command show system alarms;
	item alarm-information/alarm-summary {
          	not-exists active-alarm-count {
               		info No chassis alarms;
               		err "    ERROR: There are %s chassis alarms", active-alarm-count;
          	}
     	}
     	iterate alarm-information/alarm-detail {
          	id alarm-description;
          	list-not-less {
               		info Alarm Gone Missing;
              		err "    -Alarm: %s", alarm-description;
     	  	}
          	list-not-more {
               		info Alarm Got More;
               		err "    +Alarm: %s", alarm-description;
          	}
     	}
}


check_show_chassis_hardware_detail {
        command show chassis hardware detail;
        iterate chassis-inventory/chassis/chassis-module {
                id name;
                no-diff description {
                        info Checking chassis modules descriptions [chassis-module/description];
                        err "   ERROR: The names have changed: %s ( PRE: %s / POST: %s )", $ID.1, $PRE/description, $POST/description;
                }
                no-diff-in serial-number {
                        info Checking chassis modules serial numbers [chassis-module/serial-numbers];
                        err "   ERROR: The serial numbers have changed: %s ( PRE: %s / POST: %s )", $ID.1, $PRE/serial-number, $POST/serial-number;
                }
                no-diff-in model-number {
                        info Checking chassis modules model-number [chassis-module/model-number];
                        err "   ERROR: The model numbers have changed: %s ( PRE: %s / POST %s )", $ID.1, $PRE/model-number, $POST/model-number;
                }
                no-diff-in clei-code {
                        info Checking chassis modules CLEI codes [clei-codes];
                        err "   ERROR: The CLEI code has changed: %s ( PRE: %s / POST: %s )", $ID.1, $PRE/clei-code, $POST/clei-code;
                }
                
        }
}

check_show_chassis_version {
        command show version;
        iterate software-information/package-information {     
                id name;
                no-diff comment {
                        info Checking package comment [comment];
                        err "        ERROR: The package comment is different: %s", $ID.1;
                        err "               PRE: %s", $PRE/comment;
                        err "               POST: %s", $POST/comment;
                }
                list-not-less comment {
                        info Checking for missing software packages [comment];
                        err "        ERROR: The package comment is missing: %s", $ID.1;
                }
                list-not-more comment {
                        info Checking for additional software packages [comment];
                        err "        ERROR: The package %s was not present before.", $ID.1;
                }
        }
}

check_show_chassis_routing_engine {
        command show chassis routing-engine;
        iterate route-engine-information/route-engine {
                id slot;
                id ../../re-name;
                no-diff mastership-state {
                        info Checking the routing-engine mastership state [mastership-state];
                        err "   ERROR: the status of routing-engine %s on %s has changed: PRE: %s / POST: %s", $ID.1, $ID.2, $PRE/mastership-state, $POST/mastership-state;
                }
                delta memory-buffer-utilization, 20% {
                        info Checking if the RE memory utilisation has changed more than 20 percent [memory-buffer-utilization];
                        err "   ERROR: the memory utilisation for routing-engine %s on %s has changed more than 20 percent: PRE: %s / POST: %s", $ID.1, $ID.2, $PRE/memory-buffer-utilization, $POST/memory-buffer-utilization;
                }
                no-diff memory-dram-size {
                        info Checking if the RE memory size has changed [memory-dram-size];
                        err "   ERROR: the memory size for routing-engine %s on %s has changed: PRE: %s / POST: %s", $ID.1, $ID.2, $PRE/memory-dram-size, $POST/memory-dram-size;
                }
                no-diff model {
                        info Checking if the RE model has changed [model];
                        err "   ERROR: the model for routing-engine %s on %s has changed: PRE: %s / POST: %s", $ID.1, $ID.2, $PRE/model, $POST/model;
                }
                no-diff serial-number {
                        info Checking if the RE serial-number has changed [serial-number];
                        err "   ERROR: the serial-number for routing-engine %s on %s has changed: PRE: %s / POST: %s", $ID.1, $ID.2, $PRE/serial-number, $POST/serial-number;
                }
                is-gt cpu-idle, 10 {
                        info Checking if the RE is under high CPU utilisation [cpu-idle < 10];
                        err "   ERROR: the routing-engine %s on %s is experiencing high CPU utilisation: PRE: %s / POST: %s", $ID.1, $ID.2, $PRE/cpu-idle, $POST/cpu-idle;
                }
        }
}

check_show_chassis_environment {
        command show chassis environment;
        iterate environment-information/environment-item {
                id name;
                id class;
                id status;
                is-equal status, "OK" {
                        info Checking environmental items;
                        err "   ERROR: check %s (%s) / status: %s", $ID.1, $ID.2, $ID.3;
                }
        }
}

check_show_bgp_summary {
        command show bgp summary;
        iterate bgp-rib {
                id name;
                delta received-prefix-count, 30% {
                        info Checking if the BGP received prefixes have changed more than 30 percent [received-prefix-count];
                        err "   ERROR: the number of RECEIVED BGP prefixes for table %s has changed more than 30 percent: PRE: %s / POST: %s", $ID.1, $PRE/received-prefix-count, $POST/received-prefix-count;
                }
                delta accepted-prefix-count, 30% {
                        info Checking if the BGP accepted prefixes have changed more than 30 percent [accepted-prefix-count];
                        err "   ERROR: the number of ACCEPTED BGP prefixes for table %s has changed more than 30 percent: PRE: %s / POST: %s", $ID.1, $PRE/accepted-prefix-count, $POST/accepted-prefix-count;
                }
                delta active-prefix-count, 30% {
                        info Checking if the BGP active prefixes have changed more than 30 percent [active-prefix-count];
                        err "   ERROR: the number of ACTIVE BGP prefixes for table %s has changed more than 30 percent: PRE: %s / POST: %s", $ID.1, $PRE/active-prefix-count, $POST/active-prefix-count;
                }
                delta suppressed-prefix-count, 30% {
                        info Checking if the BGP supressed prefixes have changed more than 30 percent [suppressed-prefix-count];
                        err "   ERROR: the number of SUPRESSED BGP prefixes for table %s has changed more than 30 percent: PRE: %s / POST: %s", $ID.1, $PRE/suppressed-prefix-count, $POST/suppressed-prefix-count;
                }
                delta total-prefix-count, 30% {
                        info Checking if the BGP total prefixes have changed more than 30 percent [total-prefix-count];
                        err "   ERROR: the number of TOTAL BGP prefixes for table %s has changed more than 30 percent: PRE: %s / POST: %s", $ID.1, $PRE/total-prefix-count, $POST/total-prefix-count;
                }
        }
        iterate bgp-peer/bgp-rib {
                id ../peer-address;
                id ../peer-as;
                id name;
                delta received-prefix-count, 30% {
                        info Checking if the BGP received prefixes have changed more than 30 percent [bgp-peer/bgp-rib/received-prefix-count];
                        err "   ERROR: the number of RECEIVED BGP prefixes on neighbor %s [%s] has changed more than 30 percent for table %s: PRE: %s / POST: %s", $ID.1, $ID.2, $ID.3, $PRE/received-prefix-count, $POST/received-prefix-count;
                }
                delta accepted-prefix-count, 30% {
                        info Checking if the BGP accepted prefixes have changed more than 30 percent [bgp-peer/bgp-rib/accepted-prefix-count];
                        err "   ERROR: the number of ACCEPTED BGP prefixes on neighbor %s [%s] has changed more than 30 percent for table %s: PRE: %s / POST: %s", $ID.1, $ID.2, $ID.3, $PRE/accepted-prefix-count, $POST/accepted-prefix-count;
                }
                delta active-prefix-count, 30% {
                        info Checking if the BGP active prefixes have changed more than 30 percent [bgp-peer/bgp-rib/active-prefix-count];
                        err "   ERROR: the number of ACTIVE BGP prefixes on neighbor %s [%s] has changed more than 30 percent for table %s: PRE: %s / POST: %s", $ID.1, $ID.2, $ID.3, $PRE/active-prefix-count, $POST/active-prefix-count;
                }
                delta suppressed-prefix-count, 30% {
                        info Checking if the BGP supressed prefixes have changed more than 30 percent [bgp-peer/bgp-rib/suppressed-prefix-count];
                        err "   ERROR: the number of SUPRESSED BGP prefixes on neighbor %s [%s] has changed more than 30 percent for table %s: PRE: %s / POST: %s", $ID.1, $ID.2, $ID.3, $PRE/suppressed-prefix-count, $POST/suppressed-prefix-count;
                }
        }
        iterate bgp-peer {
                id peer-address;
                no-diff peer-state {
                        info Checking the state of each BGP session [peer-state];
                        err "   ERROR: the state of the BGP session %s has changed from %s to %s.", $ID.1, $PRE/peer-state, $POST/peer-state;
                }
                no-diff peer-as {
                        info Checking the peering AS for each BGP session [peer-as];
                        err "   ERROR: the peer AS for the BGP session %s has changed from %s to %s.", $ID.1, $PRE/peer-as, $POST/peer-as;
                }
                list-not-less peer-address {
                        info Checking for missing BGP sessions [peer-address];
                        err "   ERROR: the BGP session %s is missing.", $ID.1;
                }
                list-not-more peer-address {
                        info Checking for new BGP sessions [peer-address];
                        err "   ERROR: the BGP session %s was not present before.", $ID.1;
                }
        }
}


check_show_ospf_neighbor_detail {
        command show ospf neighbor detail;
        iterate ospf-neighbor {
                id neighbor-address;
                id interface-name;
                no-diff ospf-neighbor-state {
                        info Checking the OSPF neighbour state [ospf-neighbor-state];
                        err "   ERROR: the state of OSPF neighbour %s on interface %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/ospf-neighbor-state, $POST/ospf-neighbor-state;
                }
                no-diff neighbor-id {
                        info Checking if there is a change in the OSPF neighbor ID [neighbor-id];
                        err "   ERROR: the neighbor ID for the OSPF neighbor %s on interface %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/neighbor-id, $POST/neighbor-id;
                }
                no-diff neighbor-priority {
                        info Checking if there is a change in the OSPF neighbor priority [neighbor-priority];
                        err "   ERROR: the OSPF neighbor priority for OSPF neighbour %s on interface %s has changed from %s to %s", $ID.1, $ID.2, $PRE/neighbor-priority, $POST/neighbor-priority;
                }
                no-diff ospf-area {
                        info Checking if there is a change in the OSPF area for each neighbor [ospf-area];
                        err "   ERROR: the OSPF area for the OSPF neighbor %s on interface %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/ospf-area, $POST/ospf-area;
                }
                no-diff dr-address {
                        info Checking if the DR router has changed [dr-address];
                        err "   ERROR: the DR router for the OSPF neighbour %s on interface %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/dr-address, $POST/dr-address;
                }
                no-diff bdr-address {
                        info Checking if the BDR router has changed [bdr-address];
                        err "   ERROR: the BDR router for the OSPF neighbour %s on interface %s has changed from %s to %s.", $ID.1, $ID.2, $PRE/bdr-address, $POST/bdr-address;
                }
                list-not-less neighbor-address {
                        info Checking for missing OSPF adjacencies [neighbor-address];
                        err "   ERROR: the OSPF neighbour %s on interface %s is missing.", $ID.1, $ID.2;
                }
                list-not-more neighbor-address {
                        info Checking for new OSPF adjacencies [neighbor-address];
                        err "   ERROR: the OSPF neighbour %s on interface %s was not present before.", $ID.1, $ID.2;
                }
        }
}

check_show_mpls_lsp_extensive {
	command show mpls lsp extensive;
	iterate rsvp-session-data/rsvp-session/mpls-lsp { 
		id ../../session-type;
		id name;
		no-diff destination-address {
			info "Checking if the LSP has changed its destination address ...";
			err " ERROR: the %s LSP %s has changed its destination address from %s to %s.", $ID.1, $ID.2, $PRE/destination-address, $POST/destination-address;
		}
		no-diff source-address {
			info "Checking if the LSP has changed its source address ...";
			err " ERROR: the %s LSP %s has changed its source address from %s to %s.", $ID.1, $ID.2, $PRE/source-address, $POST/source-address;
		}
		no-diff lsp-state {
			info "Checking if the LSP state has changed ...";
			err " ERROR: the %s LSP %s has changed its state from %s to %s.", $ID.1, $ID.2, $PRE/lsp-state, $POST/lsp-state;
      		}
		no-diff name {
			info "Checking if the LSP name has changed ...";
			err " ERROR: the %s LSP %s has changed its name from %s to %s.", $ID.1, $ID.2, $PRE/name, $POST/name;
		}
		list-not-less name {
			info "Checking for missing LSPs ...";
			err " ERROR: the %s LSP %s has gone missing.", $ID.1, $ID.2;
		}
		list-not-more name {
			info "Checking for new LSPs ...";
			err " ERROR: the %s LSP %s was not present before.", $ID.1, $ID.2;
		}
		contains active-path, "(primary)" {
			info "Checking if the PRIMARY path is the active path for the LSP ...";
			err " ERROR: the %s LSP %s is not running on its PRIMARY path. It is currently running on %s.", $ID.1, $ID.2, $POST/active-path;
		} 
	}
	iterate rsvp-session-data {
		id session-type;
		no-diff count {
			info "Checking the number of LSPs ...";
			err " ERROR: the number of %s LSPs has changed from %s to %s.", $ID.1, $PRE/count, $POST/count;
		}
		delta up-count, 20% {
			info "Checking the number of LSP in UP state ...";
			err " ERROR: the number of %s LSPs in UP state has changed from %s to %s.", $ID.1, $PRE/up-count, $POST/up-count;
		}
		delta down-count, 20% {
			info "Checking the number of LSP in DOWN state ...";
			err " ERROR: the number of %s LSPs in DOWN state has changed from %s to %s.", $ID.1, $PRE/down-count, $POST/down-count;
	 	}
	}
}

check_show_mpls_lsp_ingress_statistics {
        command show mpls lsp ingress statistics;
        iterate rsvp-session-data/rsvp-session/mpls-lsp {
                id ../../session-type;
                id name;
                no-diff destination-address {
                        info "Checking if the LSP has changed its destination address ...";
                        err " ERROR: the %s LSP %s has changed its destination address from %s to %s.", $ID.1, $ID.2, $PRE/destination-address, $POST/destination-address;
                }
                no-diff source-address {
                        info "Checking if the LSP has changed its source address ...";
                        err " ERROR: the %s LSP %s has changed its source address from %s to %s.", $ID.1, $ID.2, $PRE/source-address, $POST/source-address;
                }
                no-diff lsp-state {
                        info "Checking if the LSP state has changed ...";
                        err " ERROR: the %s LSP %s has changed its state from %s to %s.", $ID.1, $ID.2, $PRE/lsp-state, $POST/lsp-state;
                }
                no-diff name {
                        info "Checking if the LSP name has changed ...";
                        err " ERROR: the %s LSP %s has changed its name from %s to %s.", $ID.1, $ID.2, $PRE/name, $POST/name;
                }
                list-not-less name {
                        info "Checking for missing LSPs ...";
                        err " ERROR: the %s LSP %s has gone missing.", $ID.1, $ID.2;
                }
                list-not-more name {
                        info "Checking for new LSPs ...";
                        err " ERROR: the %s LSP %s was not present before.", $ID.1, $ID.2;
                }
                delta lsp-bytes, 20% {
        		info "Checking for the number of lsp-bytes...";
			err "	ERROR: total number of ingress LSPs has changed from %s to %s " $PRE/lsp-bytes, $POST/lsp-bytes;
		} 
        }
}



check_show_rsvp_interface {
	command show rsvp interface;
		iterate . {
			no-diff active-count {
				info "Checking the number of active RSVP interfaces ...";
				err " ERROR: the number of active RSVP interfaces has changed from %s to %s.", $PRE/active-count $POST/active-count;
			}
		 }
		iterate rsvp-interface { 
			id interface-name; 
			no-diff interface-name {
				info "Checking if the name of the RSVP interface has changed ...";
				err " ERROR: the name of the RSVP interface %s has changed from %s to %s.", $ID.1, $PRE/interface-name, $POST/interface-name;
			}
			no-diff rsvp-status {
				info "Checking the RSVP status for each interface ...";
				err " ERROR: the status of the RSVP interface %s has changed from %s to %s.", $ID.1, $PRE/rsvp-status, $POST/rsvp-status;
			}
			list-not-less interface-name {
				info "Checking for missing RSVP interfaces ...";
				err " ERROR: the RSVP interface %s has gone missing.", $ID.1; 
			}
			list-not-more interface-name {	
				info "Checking for new RSVP interfaces ...";
				err " ERROR: the RSVP interface %s was not present before.", $ID.1;
			} 
		}
}
do {
   check_show_vpls_connections;
   check_show_route_instance_summary;
   check_show_l2circuit_connections_summary;
   check_show_l2circuit_connections;
   check_show_l2vpn_connections;
}


check_show_vpls_connections {
        command show vpls connections;
        iterate vpls-connection-information/instance {
                id instance-name;
                no-diff-in reference-site/local-site-id {
                        info "Checking if the local side id has changed";
                        err "   ERROR: The local side id  has changed: %s ( PRE: %s / POST: %s )", $ID.1, $PRE/reference-site/local-site-id, $POST/reference-site/local-site-id;
                }
                no-diff-in reference-site/connection/connection-id {
                        info "Checking if the connection-id has changed";
                        err "   ERROR:  The connection id has changed: %s ( PRE: %s / POST: %s )", $ID.1, $PRE/connection/connection-id, $POST/connection/connection-id;
                }
                no-diff reference-site/connection/connection-type {
                        info "Checking if the connection-type has changed";
                        err "   ERROR:  The connection type has changed: %s ( PRE: %s / POST: %s )", $ID.1, $PRE/connection/connection-type, $POST/connection/connection-type;
                }
                no-diff reference-site/connection/connection-status {
                        info "Checking if the connection-status has changed";
                        err "   ERROR:  The connection status has changed: %s ( PRE: %s / POST: %s )", $ID.1, $PRE/connection/connection-status, $POST/connection/connection-status;
                }
        }
}

check_show_route_instance_summary  {
        command show route instance summary;
        iterate instance-information/instance-core {
                id instance-name;
                id instance-type;
                id instance-rib/irib-name
                        no-diff instance-rib/irib-name {
                                info "Checking if the irib-name has changed";
                                err "   ERROR:  The irib-name for the instance-name %s % instance-type %s has changed from %s to %s", $ID.1, $ID.2, $PRE/instance-rib/irib-name, $POST/instance-rib/irib-name;
                        }
                        delta   instance-rib/irib-active-count, 20% {
                                info "Checking if the irib-active-count has increased/decreased by +-20% ";
                                err "   ERROR:  The irib-active-count for the irib-name $s of instance-name %s & instance-type %s has changed from %s to %s", $ID.1, $ID.2, $ID.3, $PRE/instance-rib/irib-active-count, $POST/instance-rib/irib-active-count;
                        }
                        delta   instance-rib/irib-holddown-count, 10% {
                                info "Checking if the irib-holddown-count has increased/decreased by +-10%";
                                err "   ERROR:  The irib-holddown-count for the irib-name $s of instance-name %s & instance-type %s has changed from %s to %s", $ID.1, $ID.2, $ID.3, $PRE/instance-rib/irib-holddown-count, $POST/instance-rib/irib-holddown-count;
                        }
                        delta   instance-rib/irib-hidden-count, 10% {
                                info "Checking if the irib-hidden-count has increased/decreased by +-10%";
                                err "   ERROR:  The irib-hidden-count for the irib-name $s of instance-name %s & instance-type %s has changed from %s to %s", $ID.1, $ID.2, $ID.3, $PRE/instance-rib/irib-hidden-count, $POST/instance-rib/irib-hidden-count;
                        }
        }
}

check_show_l2circuit_connections_summary {
        command show l2circuit connections summary;
        iterate l2circuit-connection-information/l2circuit-neighbor {
                id neighbor-address;
                        no-diff-in neighbor-address {
                                info "Checking if the neighbor-address has changed";
                                err "   ERROR:  The neighbor address has changed from %s to %s", $PRE/neighbor-address, $POST/neighbor-address;
                        }
                        no-diff-in connections-summary/vc-up-count {
                                info "Checking if the vc-up-count has changed";
                                err "   ERROR:  The vc-up-count has changed from %s to %s", $PRE/vc-up-count, $POST/vc-up-count;
                        }
                        no-diff-in connections-summary/vc-down-count {
                                info "Checking if the vc-down-count has changed";
                                err "   ERROR:  The vc-down-count has changed from %s to %s", $PRE/vc-down-count, $POST/vc-down-count;
                        }
        }
}


check_show_l2circuit_connections {
        command show l2ciruit connections;
        iterate l2circuit-connection-information/l2ciruit-neighbor/connection {
                id ../../neighbor-address;
                id connection-id;
                        no-diff-in connection/connection-id {
                                info "Checking if connection-id has changed";
                                err "   ERROR:  The connection-id for neighbor-address %s has changed from %s to %s", $ID.1, $PRE/connection-id, $POST/connection-id;
                        }
                        no-diff connection/connection-type {
                                info "Checking if connection-type has changed";
                                err "   ERROR:  The connection-type for neighbor-address %s & connection-id %s has changed from %s to %s", $ID.1, $ID.2, $PRE/connection-type, $POST/connection-type;
                        }
                        no-diff connection/connection-status {
                                info "Checking if connection-status has changed";
                                err "   ERROR:  The connection-status for neighbor-address %s & connection-id %s has changed from %s to %s", $ID.1, $ID.2, $PRE/connection-status, $POST/connection-status;
                        }
                        no-diff-in connection/remote-pe {
                                info "Checking if remote-pe ip address has changed";
                                err "   ERROR:  The ip address for remote-pe of neighbor  %s & connection-id %s has changed from %s to %s", $ID.1, $ID.2, $PRE/connection/connection-status, $POST/connection/connection-status;
                        }
                        no-diff local-interface/interface-status {
                                info "Checking if the local-interface-status has changed";
                                err "   ERROR:  The local-interface-status for neighbor %s & connection-id %s has changed from %s to %s", $ID.1, $ID.2, $PRE/local-interface/interface-status, $POST/local-interface/interface-status;
                        }
                        no-diff local-interface/interface-description {
                                info "Checking if the local-interface-description has changed";
                                err "   ERROR:  The local-interface-description for neighbor %s & connection-id %s has changed from %s to %s", $ID.1, $ID.2, $PRE/local-interface/interface-description, $POST/local-interface/interface-description;
                        }
        }
        iterate l2circuit-connection-information/l2circuit-neighbor {
                        id neighbor-address;
                        no-diff neighbor-address {
                                info " Checking if the neighbor-address has changed...";
                                err  "  ERROR:  The neighbor %s ip address is changed from %s to %s", $ID.1, $PRE/neighbor-address, $POST/neighbor-address;
                        }
                        list-not-less neighbor-address {
                                info "Checking for missing neighbors...";
                                err "   ERROR:  The neighbor %s has gone missing", $ID.1;
                        }
                        list-not-more neighbor-address {
                                info "Checking for missing neighbors...";
                                err "   ERROR:  The neighbor %s was not present before", $ID.1;
                        }
        }
}

check_show_l2vpn_connections {
        command show l2vpn connections;
        iterate l2vpn-connections-information/instance/reference-site/connection {
                id ../../instance-name;
                id ../../local-site-id;
                        no-diff-in connection-id {
                                info Checking if connection-id is same;
                                err "   ERROR:  The connection-id for instance-name  %s & local-site-id %s has changed from %s to %s", $ID.1, $ID.2, $PRE/connection-id, $POST/connection-id;
                        }
                        no-diff connection-type {
                                info Checking if connection-type is same;
                                err "   ERROR:  The connection-type for instance-name %s & local-site-id %s has changed  from %s to %s", $ID.1, $ID.2, $PRE/connection-type, $POST/connection-type;
                        }
                        no-diff connection-status {
                                info Checking if connection-status is same;
                                err "   ERROR:  The connection-status for instance-name %s & local-site-id  %s has changed from %s to %s", $ID.1, $ID.2, $PRE/connection-status, $POST/connection-status;
                        }
                        no-diff-in remote-pe {
                                info Checking if remote-pe ip address is same;
                                err "   ERROR:  The ip address for remote-pe for instance-name %s & local-site-id  %s has changed from %s to %s", $ID.1, $ID.2, $PRE/connection-status, $POST/connection-status;
                        }
                        no-diff local-interface/interface-status {
                                info Checking the local-interface-status;
                                err "   ERROR:  The local-interface-status for instance-name %s & local-site-id %s has changed from %s to %s", $ID.1, $ID.2, $PRE/local-interface/interface-status, $POST/local-interface/interface-status;
                        }
                        no-diff local-interface/interface-description {
                                info Checking the local-interface-description;
                                err "   ERROR:  The local-interface-description for instance-name %s & local-site-id %s has changed from %s to %s", $ID.1, $ID.2, $PRE/local-interface/interface-description, $POST/local-interface/interface-description;
                        }
	}
        iterate l2vpn-connections-information/instance {
                id instance-name;
                id reference-site/local-site-id;
                        no-diff instance-name {
                                info " Checking if the instance-name has changed...";
                                err  "  ERROR:  The instance-name %s  is changed from %s to %s", $ID.1, $PRE/instance-name, $POST/instance-name;
                        }
                        list-not-less instance-name {
                                info "Checking for missing instances...";
                                err "   ERROR:  The instance-name %s has gone missing", $ID.1;
                        }
                        list-not-more neighbor-address {
                                info "Checking for missing intances...";
                                err "   ERROR:  The instance %s was not present before", $ID.1;
                        }
                        no-diff reference-site/local-site-id {
                                info " Checking if the local-site-id name has changed...";
                                err  "  ERROR:  The local-site-id %s  is changed from %s to %s", $ID.2, $PRE/reference-site/local-site-id, $POST/reference-site/local-site-id;
                        }
                        list-not-less reference-site/local-site-id {
                                info "Checking for missing local-sites-id...";
                                err "   ERROR:  The local-site-id  %s has gone missing", $ID.2;
                        }
                        list-not-more reference-site/local-site-id {
                                info "Checking for missing intances...";
                                err "   ERROR:  The local-site-id %s was not present before", $ID.2;
                        }

        }
}

